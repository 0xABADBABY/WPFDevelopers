<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WPFDevelopers.Controls"
                    xmlns:helpers="clr-namespace:WPFDevelopers.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Basic/ControlBasic.xaml"/>
        <ResourceDictionary Source="../Themes/Basic/Animations.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBasicStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="helpers:ElementHelper.CornerRadius" Value="3"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="20,10" />
        
    </Style>

    
    <Style x:Key="PrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel>
                        <Border Name="PART_Border" 
                                CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </controls:SmallPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" 
                                    Value="{DynamicResource PrimaryPressedSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" 
                                    Value="{DynamicResource PrimaryPressedSolidColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                    Value="{DynamicResource PrimaryMouseOverSolidColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource RegularTextSolidColorBrush}"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel>
                        <Border x:Name="PART_Border" 
                                CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"/>

                        <ContentPresenter x:Name="PART_ContentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" 
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </controls:SmallPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrushSolidColorBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource DefaultBackgroundSolidColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" 
                                    Value="{DynamicResource DefaultBackgroundPressedSolidColorBrush}" />
                            <Setter Property="Background" 
                                    Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource DefaultBackgroundPressedSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" 
                                    Value="{DynamicResource DefaultBorderBrushSolidColorBrush}" />
                            <Setter Property="Background" 
                                    Value="{DynamicResource DefaultBackgroundSolidColorBrush}" />
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource PrimaryNormalSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}" />

    <Style x:Key="SuccessPrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource SuccessSolidColorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource SuccessPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource SuccessPressedSolidColorBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource SuccessMouseOverSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SuccessDefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource SuccessBorderBrushSolidColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource SuccessBackgroundSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource SuccessSolidColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" 
                                    Value="{DynamicResource SuccessPressedSolidColorBrush}" />
                <Setter Property="Background" 
                                    Value="{DynamicResource SuccessBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" 
                                    Value="{DynamicResource SuccessPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" 
                                    Value="{DynamicResource SuccessBorderBrushSolidColorBrush}" />
                <Setter Property="Background" 
                                    Value="{DynamicResource SuccessBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" 
                                    Value="{DynamicResource SuccessSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WarningPrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WarningSolidColorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource WarningPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource WarningPressedSolidColorBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource WarningMouseOverSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WarningDefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBorderBrushSolidColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource WarningBackgroundSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WarningSolidColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" 
                                    Value="{DynamicResource WarningPressedSolidColorBrush}" />
                <Setter Property="Background" 
                                    Value="{DynamicResource WarningBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" 
                                    Value="{DynamicResource WarningPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" 
                                    Value="{DynamicResource WarningBorderBrushSolidColorBrush}" />
                <Setter Property="Background" 
                                    Value="{DynamicResource WarningBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" 
                                    Value="{DynamicResource WarningSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DangerPrimaryButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource DangerSolidColorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource DangerPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource DangerPressedSolidColorBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                                    Value="{DynamicResource DangerMouseOverSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DangerDefaultButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundSolidColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BaseSolidColorBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBorderBrushSolidColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource DangerBackgroundSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource DangerSolidColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" 
                                    Value="{DynamicResource DangerPressedSolidColorBrush}" />
                <Setter Property="Background" 
                                    Value="{DynamicResource DangerBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" 
                                    Value="{DynamicResource DangerPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" 
                                    Value="{DynamicResource DangerBorderBrushSolidColorBrush}" />
                <Setter Property="Background" 
                                    Value="{DynamicResource DangerBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" 
                                    Value="{DynamicResource DangerSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PathButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          x:Name="PART_ContentPresenter" Opacity=".8"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextSolidColorBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="BorderThickness" Value="1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="PART_ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         Storyboard.TargetName="PART_ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="PART_ContentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="PART_ContentPresenter" Opacity="0.7" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </controls:SmallPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>